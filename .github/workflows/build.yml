name: Reusable SonarQube Scan

on:
  # Trigger analysis when pushing in master or pull requests, and when creating
  # a pull request.
  push:
    branches: [main, staging, testing, develop, feat/*]

  pull_request:
      types: [opened, synchronize, reopened]

jobs:
  sonarqube:
    name: SonarQube Trigger
    runs-on: ubuntu-latest
    steps:
    - name: Checking out
      uses: actions/checkout@master
      with:
        # Disabling shallow clone is recommended for improving relevancy of reporting
        fetch-depth: 0
    - name: SonarQube Scan
      uses: kitabisa/sonarqube-action@v1.2.0
      with:
        host: ${{ secrets.SONAR_HOST_URL }}
        login: ${{ secrets.SONAR_TOKEN }}
        projectKey: "AmaliTech-Training-Academy_storefrontsmes-backend"

      # Check the Quality Gate status.
    - name: SonarQube Quality Gate check
      id: sonarqube-quality-gate-check
      uses: sonarsource/sonarqube-quality-gate-action@master
      # Force to fail step after specific time.
      timeout-minutes: 5
      env:
       SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
       SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }} #OPTIONAL

    # Optionally you can use the output from the Quality Gate in another step.
    # The possible outputs of the `quality-gate-status` variable are `PASSED`, `WARN` or `FAILED`.
    - name: "Show SonarQube Quality Gate Status value"
      run: echo "The Quality Gate status is ${{ steps.sonarqube-quality-gate-check.outputs.quality-gate-status }}"

  slackNotification:
        needs: [sonarqube]
        name: Slack Notification
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - name: Slack Notify
              uses: rtCamp/action-slack-notify@v2.2.0
              env:
                  SLACK_CHANNEL: ${{ secrets.SLACK_CHANNEL }}
                  SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
                  SLACK_TITLE: POST Title
                  SLACK_MESSAGE: 'Post Content :rocket:'
                  SLACK_COLOR: '#ff00ff'
                  SLACK_USERNAME: ${{ secrets.SLACK_USERNAME }} #OPTIONAL
